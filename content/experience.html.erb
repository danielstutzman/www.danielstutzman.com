---
layout: page
extension: ""
title: Experience
filter: erb
---
<%
projects_yaml = <<EOF
- From: 2012
  Dash:
  Employer: Quick Left client
  Impact: 2
  Description: "Helped with development of restaurant loyalty site"
  MoreInfo: https://redroyalty.redrobin.com/
  Tags:
  - Ruby
  - Ruby on Rails
  - jQuery
  - JavaScript
  - Nginx
  - Unicorn
  - MS SQL Server
  - PostgreSQL
  - HTML
  - CSS

- From: 2012
  Dash:
  Employer: personal project
  Impact: 1
  Description: "Created pop-up time tracker app for Mac"
  MoreInfo: https://github.com/danielstutzman/quantified-self
  Tags:
  - Ruby
  - HAML
  - Sinatra
  - Objective C

- From: 2012
  Dash:
  Employer: Quick Left client
  Impact: 2
  Description: "Added single sign-on via SAP logon tickets to site"
  MoreInfo: https://github.com/danielstutzman/sso_sap
  Tags:
  - Apache
  - Ruby
  - Ruby on Rails
  - Java
  - bash
  - HAML

- From: 2011
  Dash:
  Employer: personal project
  Impact: 1
  Description: "Prototyped computer vision algorithms to read sheet music"
  MoreInfo: http://www.danielstutzman.com/song_reader/blog.html
  Tags:
  - Scala
  - JavaScript
  - Java
  - Ruby on Rails

- From: 2011
  Dash:
  Employer: "KIDzOUT Inc."
  Impact: 2
  Description: "Created iPhone app to find nearby kid-friendly locations"
  MoreInfo: http://www.kidzout.com/
  Tags:
  - Apache
  - PHP
  - Objective C
  - MySQL
  - JavaScript

- From: 2011
  Dash:
  Employer: "Optimal Consulting"
  Impact: 2
  Description: "Ported stand-alone Rails app from Windows to Mac"
  MoreInfo: http://www.busydocs.com/
  Tags:
  - Ruby
  - Ruby on Rails
  - bash
  - MySQL
  - SQLite

- From: 2011
  Dash: 	
  Employer: "personal project"
  Impact: 1
  Description: "Created iPhone app to edit a music score"
  MoreInfo: /images/experience/shape_notes.jpg
  Caption: Screenshot of score editing screen
  Tags:
  - Objective C

- From: 2011
  Dash: 	
  Employer: "personal project"
  Impact: 1
  Description: "Created iPhone app to compare supermarket prices"
  MoreInfo: /images/experience/per_pound.png
  Caption: Screenshot of conversion screen
  Tags:
  - Objective C

- From: 2008
  Dash: "-"
  To: 11
  Employer: "Rosetta Stone"
  Impact: 3
  Description: "Created Rails sites to manage aggregate product usage logs"
  MoreInfo: /images/experience/logs.png
  Caption: Excerpt of screenshot of one web site page
  Tags:
  - Apache
  - Ruby
  - Ruby on Rails
  - MySQL
  - JavaScript
  - bash
  - SQLite
  - MongoDB
  - Hadoop

- From: 2009
  Dash: "-"
  To: 10
  Employer: "Rosetta Stone"
  Impact: 2
  Description: "Created Rails sites to test language skills"
  MoreInfo: /images/experience/test_language_skills.jpg
  Caption: Excerpt of screenshot of one web site page
  Tags:
  - Apache
  - Ruby
  - Ruby on Rails
  - MySQL
  - JavaScript
  - HTML
  - CSS

- From: 2010
  Dash: 	
  Employer: "class project"
  Impact: 1
  Description: "Created OpenGL 3-D animation of walking students"
  MoreInfo: /images/experience/opengl_project.jpg
  Caption: Still image from 3-D animation
  Tags:
  - C

- From: 2010
  Dash: 	
  Employer: "class project"
  Impact: 2
  Description: "Implemented predicate language for static analysis research"
  MoreInfo: /images/experience/ocaml.png
  Caption: Excerpt from OCaml source code
  Tags:
  - OCaml

- From: 2008
  Dash: "-"
  To: "09"
  Employer: "Rosetta Stone"
  Impact: 2
  Description: "Created Rails site to browse content and edit dictionaries"
  MoreInfo: /images/experience/words.png
  Caption: Excerpt of screenshot of one web site page
  Tags:
  - Apache
  - Ruby
  - Ruby on Rails
  - MySQL
  - Java
  - ant
  - bash
  - JavaScript
  - HTML
  - CSS

- From: 2007
  Dash: "-"
  To: "09"
  Employer: "Rosetta Stone"
  Impact: 3
  Description: "Created Java applet and Rails site to record audio"
  MoreInfo: /images/experience/sound_check.png
  Caption: Screenshot of Java applet
  Tags:
  - Apache
  - Java
  - Swing
  - Ruby
  - Ruby on Rails
  - MySQL
  - PayPal API
  - HTML

- From: 2009
  Dash: 	
  Employer: "class project"
  Impact: 1
  Description: "Created search engine over Japanese partial sentences"
  MoreInfo: /images/experience/search_engine.png
  Caption: Example screenshot of top search results
  Tags:
  - Java
  - Lucene
  - HTML

- From: 2009
  Dash: 	
  Employer: "class project"
  Impact: 1
  Description: "Created limited Python to x86 compiler"
  MoreInfo: /images/experience/python_compiler.png
  Caption: Excerpts from slide presentation explaining stack unrolling
  Tags:
  - Python
  - x86 Assembly

- From: 2009
  Dash: 	
  Employer: "personal project"
  Impact: 1
  Description: "Visualized acoustic model from Sphinx-4 speech recognizer"
  MoreInfo: /images/experience/sphinx.png
  Caption: X axis is time; Y axis is frequency; Top third shows spectrogram of speech input; Middle third shows probability, with white path showing the highest probability alignment; Colors show abandoned alignments; Bottom third shows finished alignment.
  Tags:
  - Java
  - Swing

- From: 2008
  Dash: 	
  Employer: "class project"
  Impact: 1
  Description: "Classified motion by machine learning on accelerometer data"
  MoreInfo: /images/experience/accelerometer.png
  Caption: Excerpt from paper demonstrating high accuracy of predictions
  Tags:
  - bash

- From: 2008
  Dash: 	
  Employer: "personal project"
  Impact: 1
  Description: "Prototyped calendar reminder popups"
  MoreInfo: /images/experience/alarm_popup.png
  Caption: Screenshot demonstrating alarm popup bar and popup dialog
  Tags:
  - C#
  - PHP
  - MySQL

- From: 2008
  Dash: 	
  Employer: "class project"
  Impact: 1
  Description: "Created machine translation using synchronized syntax tree transfer rules"
  MoreInfo: /images/experience/machine_translation.png
  Caption: Screenshot showing English translations of a given Spanish sentence.
  Tags:
  - Ruby
  - Ruby on Rails
  - JavaScript
  - HTML

- From: 2006
  Dash: "-"
  To: "07"
  Employer: "Rosetta Stone"
  Impact: 2
  Description: "Served on team creating a content management application"
  Tags:
  - Java
  - Swing
  - PostgreSQL
  - PL/pgSQL
  - GWT
  - Scrum
  - Ant
  - Tomcat

- From: 2005
  Dash: 	
  Employer: "Rosetta Stone"
  Impact: 3
  Description: "Created e-commerce site that synchronizes with Oracle ERP"
  Tags:
  - Ruby
  - Ruby on Rails
  - Oracle
  - PL/SQL
  - MySQL
  - Scrum

- From: 2005
  Dash: 	
  Employer: "Rosetta Stone"
  Impact: 2
  Description: "Maintained login/authentication server"
  Tags:
  - Java
  - MySQL
  - Tomcat

- From: 2004
  Dash: 	
  Employer: "Rosetta Stone"
  Impact: 2
  Description: "Maintained customizations to parcel shipping software"
  Tags:
  - VBA
  - Oracle

- From: 2004
  Dash: 	
  Employer: "Rosetta Stone"
  Impact: 3
  Description: "Customized Oracle iStore web app to be point of sale solution"
  Tags:
  - Java
  - JSP
  - Oracle
  - PL/SQL
  - JavaScript
  - HTML

- From: 2002
  Dash: "-"
  To: "03"
  Employer: "VistaShare"
  Impact: 2
  Description: "Maintained MS Access/VBA app to track insurance policies"
  Tags:
  - VBA
  - MS Access
  - SQL Server

- From: 2003
  Dash: 	
  Employer: "Eastern Mennonite University"
  Impact: 1
  Description: "Created web interface for creating web surveys"
  Tags:
  - PHP
  - MySQL
  - HTML

- From: 1999
  Dash: "-"
  To: 2000
  Employer: "Landis Homes Retirement Community"
  Impact: 2
  Description: "Provided IT support and user training for MS Windows network"	

- From: 1999
  Dash: "-"
  To: 2000
  Employer: "Landis Homes Retirement Community"
  Impact: 2
  Description: "Created MS Access app to track phone system data"
  Tags:
  - VBA
  - MS Access

- From: 1998
  Dash: 	
  Employer: "Lancaster Mennonite Historical Society"
  Impact: 1
  Description: "Prototyped web pages"
  Tags:
  - Perl
  - HTML

- From: 1996
  Dash: "-"
  To: 97
  Employer: "class project"
  Impact: 1
  Description: "Published high school newspaper on the web"
  Tags:
  - Perl
  - HTML
EOF

html = ''
col_headers = %w[From Dash To Employer MoreInfo Description Tags]
html += "  <tr>\n"
col_headers.each { |col_header|
  next if col_header == 'Impact'
  text = case col_header
    when 'From' then 'Date'
    when 'Dash' then ''
    when 'To' then ''
    when 'MoreInfo' then ''
    else col_header
  end
  html += "    <th class='#{col_header}'>#{text}</th>"
}
html += "  </tr>\n"

projects = YAML::load(projects_yaml)
projects.each { |project|
  html += "  <tr>\n"
  col_headers.each { |col_header|
    value = project[col_header]
    case col_header
      when '' then next
      when 'Impact' then next
        #value = ('&#x2605;' * value.to_i) + ('&#x2606;' * (3 - value.to_i))
      when 'Caption' then next
      when 'Tags'
        value = ([''] + (value || ['']) + ['']).join(', ')
      when 'MoreInfo'
        if value.nil?
          nil
        elsif value.match(%r[^http])
          value = "<a href='#{value}'>
            <img src='/images/icon_link.png' width='10' height='10' style='padding-top:3px'/></a>"
        elsif value.match(%r[^/images/])
          value =
            "<a href='#{value}' rel='lightbox' title='#{project['Caption']}'>
            <img src='/images/icon_image.png' width='10' height='10' style='padding-top:3px'/></a>"
        end
    end
    html += "    <td class='#{col_header}'>#{value}</td>\n"
  }
  html += "  </tr>\n"
}
table_rows = html
%>
  <style> 
    th { text-align: left; padding-left: 8px; }
    th.Tags { display: none; }
    td.Tags { display: none; }
    td { padding: 0 8px; }
    td.From, td.Dash, td.To, th.From, th.Dash, th.To { padding: 0; }
    td.To { padding-right: 8px; }
    body {
      font: 14px "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans",
        Helvetica, Arial, 'Liberation Sans', FreeSans, sans-serif;
    }
    #filters-div {
      background-color: #ccc;
      margin-bottom: 20px;
      box-shadow: 1px 1px 5px #888;
      -moz-box-shadow: 1px 1px 5px #888;
      -webkit-box-shadow: 1px 1px 5px #888;
      padding: 10px;
      border: 1px black solid;
      height: 15em; /* for IE7 */
    }
    td, th {
      vertical-align: top;
      padding: 0 10px 10px 10px;
    }
    .filter-vertical {
      float: left;
      width: 170px;
      height: 12em;
    }
    .Employer {
      width: 140px;
    }
  </style> 
 
<script> 
/*
  Developed by Robert Nyman, http://www.robertnyman.com
  Code/licensing: http://code.google.com/p/getelementsbyclassname/
*/
var getElementsByClassName = function (className, tag, elm){
  if (document.getElementsByClassName) {
    getElementsByClassName = function (className, tag, elm) {
      elm = elm || document;
      var elements = elm.getElementsByClassName(className),
        nodeName = (tag)? new RegExp("\\b" + tag + "\\b", "i") : null,
        returnElements = [],
        current;
      for(var i=0, il=elements.length; i<il; i+=1){
        current = elements[i];
        if(!nodeName || nodeName.test(current.nodeName)) {
          returnElements.push(current);
        }
      }
      return returnElements;
    };
  }
  else if (document.evaluate) {
    getElementsByClassName = function (className, tag, elm) {
      tag = tag || "*";
      elm = elm || document;
      var classes = className.split(" "),
        classesToCheck = "",
        xhtmlNamespace = "http://www.w3.org/1999/xhtml",
        namespaceResolver = (document.documentElement.namespaceURI === xhtmlNamespace)? xhtmlNamespace : null,
        returnElements = [],
        elements,
        node;
      for(var j=0, jl=classes.length; j<jl; j+=1){
        classesToCheck += "[contains(concat(' ', @class, ' '), ' " + classes[j] + " ')]";
      }
      try  {
        elements = document.evaluate(".//" + tag + classesToCheck, elm, namespaceResolver, 0, null);
      }
      catch (e) {
        elements = document.evaluate(".//" + tag + classesToCheck, elm, null, 0, null);
      }
      while ((node = elements.iterateNext())) {
        returnElements.push(node);
      }
      return returnElements;
    };
  }
  else {
    getElementsByClassName = function (className, tag, elm) {
      tag = tag || "*";
      elm = elm || document;
      var classes = className.split(" "),
        classesToCheck = [],
        elements = (tag === "*" && elm.all)? elm.all : elm.getElementsByTagName(tag),
        current,
        returnElements = [],
        match;
      for(var k=0, kl=classes.length; k<kl; k+=1){
        classesToCheck.push(new RegExp("(^|\\s)" + classes[k] + "(\\s|$)"));
      }
      for(var l=0, ll=elements.length; l<ll; l+=1){
        current = elements[l];
        match = false;
        for(var m=0, ml=classesToCheck.length; m<ml; m+=1){
          match = classesToCheck[m].test(current.className);
          if (!match) {
            break;
          }
        }
        if (match) {
          returnElements.push(current);
        }
      }
      return returnElements;
    };
  }
  return getElementsByClassName(className, tag, elm);
};
 
function filter(filterText) {
  var TAGS_COLUMN = 6;
  var allProjects = document.getElementById('all-projects'),
    i, len = allProjects.children[0].children.length,
    project, languages, containsFilterText, skipHeaderRow = 1;
  filterText = ', ' + filterText.toLowerCase() + ',';
  for (i = skipHeaderRow; i < len; i++) {
    project = allProjects.children[0].children[i];
    languages = (project.children.length > 5) ?
      project.children[TAGS_COLUMN].innerHTML : "";
    containsFilterText = (languages.toLowerCase().indexOf(filterText) != -1);
    // use blank instead of 'table-row' to accomodate IE7
    project.style.display = (containsFilterText) ? '' : 'none';
  }
  return false;
}
 
function makeFilterHandler(filterText) {
  return function() {
    filter(filterText);
  };
}
 
function addClick(target, callback) {
  if (target.addEventListener) {
    target.addEventListener('click', callback, true);
  }
  else { // for IE
    target.attachEvent('onclick', callback);
  }
}
 
function addHandlersToFilters() {
  var lists = getElementsByClassName('filter-list'),
    i, len, len2, list, liTag, filterText;
  for (i = 0, len = lists.length; i < len; i++) {
    list = lists[i];
    for (j = 0, len2 = list.children.length; j < len2; j++) {
      liTag = list.children[j];
      filterText = liTag.innerHTML;
      filterText = filterText.replace(/\s+$/, ''); // for IE7
      addClick(liTag, makeFilterHandler(filterText));
      liTag.style.cursor = 'pointer';
      liTag.style.textDecoration = 'underline';
    }
  }
}
 
function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      if (oldonload) {
        oldonload();
      }
      func();
    }
  }
}
 
addLoadEvent(addHandlersToFilters);
 
</script> 
 
<h1 id='experience-h1'>Experience</h1> 

<%
tags_yaml = "
- Compiled languages:
  - C
  - C#
  - Java
  - Objective C
  - OCaml
  - PL/pgSQL
  - PL/SQL
  - Scala
  - x86 Assembly
- Interpreted languages:
  - Bash
  - JavaScript
  - Objective C
  - Perl
  - PHP
  - Python
  - Ruby
  - VBA
- Web technologies:
  - Apache
  - CSS
  - GWT
  - HAML
  - Nginx
  - jQuery
  - JSP
  - Ruby on Rails
  - Tomcat
  - Unicorn
- Databases:
  - MongoDB
  - MS Access
  - MS SQL Server
  - MySQL
  - Oracle
  - PostgreSQL
  - SQLite
"
grouping_maps = YAML::load(tags_yaml)
%>
 
<div id='filters-div'> 
  <% grouping_maps.each { |grouping_map|
    grouping, tags = grouping_map.keys[0], grouping_map.values[0] %>
    <div class='filter-vertical'> 
      <%= grouping %>
      <ul class='filter-list'> 
        <% tags.each { |tag| %>
          <li><%= tag %></li>
        <% } %>
      </ul> 
    </div> 
  <% } %>
  <br style='clear:both'/> 
</div> 
 
<!-- Ant J2EE Lucene Scrum Swing PayPal API Hadoop Eclipse Subversion Git --> 
<!-- Cruise Control make XCode vim --> 

<table id='all-projects'> 
  <%= table_rows %>
</table> 
